<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAEAIAB+AwAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAAwAAAAMAgGAAAAVwL5hwAAAAFz
        UkdCAK7OHOkAAAAEZ0FNQQAAsY8L/GEFAAAACXBIWXMAAA7DAAAOwwHHb6hkAAADE0lEQVRoQ9WaO2gU
        QRjHN148D3wW8VEcooVBULBRkKBoYWGhYGGhYmGngoWgWCkIKgEbGwuDhYWNhaBiCsEyHgopBB+NFko8
        MMEDDSoGDOr/P4/zdjO3N7s3+5gf/HLfXrG33857JgOBO3bCvXAtrMN16pNMK5twBj5TzsPCqMH98Db8
        BP8m9Au8Cw/DZTA3BuEJ+BmaHiyNX+FZyJeSKQfga2h6CBe+h8ehc1jED6DpR7NwArINOYENMcu33k22
        q+2wL9izuKzrSf0Oj8BU8OF5A9ON85adRiJYbYp881F/Qb5QK9hgi6jzveQL1QNjLHn2NkmdhByH2kSn
        EuznH8swTG3lYhXlw9zsbxUt4DS8JcNwAszsJdwqriLsvrBFRfkwcf2tihbAOdUm+IMXi/hHwRHQ+PAl
        gwPceRn+T4BzkFEZesE5KEZqnQCnwc6G7hxgT3lIhhJOiU2tvsw+he1GzHmHVR9bIubgaibAEe45v7Fh
        27GNQXV5dl3q5Ng7FVlxtII/7H32iUsL1o+sEWPCYK2SiVMNLtSsabEEbkCuhqzYcXI4dlB7de+jisxs
        PlgPqktDg2mImP7fxEP2Qk7r/uzUz1j/zLP9OaPOEuDqZ5e4tKBXCcy8+aYiM0PDK4JKtXP8DJOwBJpM
        4APcIC4t6JVAvyRMQAxk3SukBzABbjb5yjQT4OzOV0QCPpdAkwlwr9JXRAlwk9VXGjqBlrj0C+5sjzMB
        Bk/4jWe8gC0mQB6pT58Qz6wTYAnEzwHKBWvNfQY6Aa7wr8nQC25CMe3VCZD2lyWHNaX9svWSUsNN1Dsy
        NLMEq7GBzrQdE7OhpbkEr8rQDKfX0QV0WeQJTs9jKG6vpDm0y1pu9VtvvPFkpCxnA1qeZiaCJyOmGxXh
        FZgKNmoeLphumpepH15T1DkZq3DiatMN7lzwcMH0Q1nI3sb5TjnXzmdglqXBE/uLMNMT+1XwMnTZNjh6
        cYNtCOYGx4tTkLvEaZLhQ3PQ5GGF9bZOlOhUIi3cr+f52h7IxNhm9Cfp/HcbfjbgOOxzIRUE/wDc7vkz
        ghVprAAAAABJRU5ErkJggg==
</value>
  </data>
</root>